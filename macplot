#!/usr/bin/env python3
import json
import csv
import subprocess
import re
import requests
from datetime import datetime, timedelta
from functools import reduce
from sys import argv
from time import sleep

def system(cmd):
    return subprocess.run(['/bin/sh', '-c', cmd], capture_output=True).stdout

def strip_empty(l):
    return [i for i in l if len(i) > 0]

def capture(capturename):
    filename = capturename + '.json'
    samples = []
    print('Capturing...')
    starttime = datetime.now()
    try:
        while True:
            istat = requests.get('http://localhost:4027/api/')
            timestamp = datetime.now() - starttime
            samples.append({'timestamp': timestamp / timedelta(seconds=1),
                            'istatistica': json.loads(istat.text)})
            sleep(1)
    except:
        pass
    print('Saving to file...')
    f = open(filename, 'w')
    json.dump(samples, f)
    system('chown "$(logname)" "' + filename + '"')
    print('Saved capture. Run %s p %s to plot.' % (argv[0], capturename))

def plot(cap):
    samples = json.load(open(cap + '.json', 'r'))
    w = csv.writer(open(cap + '.csv', 'w'))
    w.writerow(['time (s)', 'cpu (%)', 'fan (rpm)', 'P-cluster temp (C)'])
    for sample in samples:
        istat = sample['istatistica']
        temps = istat['sensors']
        temps = [temps[k] for k in temps.keys() if k.split(' ')[0] == 'pACC']
        temps = [int(i) for i in temps if i != '' and int(i) != 0]
        row = ['%.1f' % sample['timestamp']]
        row.append(int(istat['summary_cpuLoad'] * 100))
        row.append(istat['sensors_fansData'].rstrip())
        row.append(int(reduce(lambda x, y: x + y, temps) / len(temps)))
        w.writerow(row)
    system('open \'%s.csv\'' % cap)

if argv[1][0] == 'c':
    capture(datetime.now().strftime('%Y-%m-%d_%H-%M-%S'))
elif argv[1][0] == 'p':
    plot(argv[2])
else:
    print('MacPlot by chrissx <chrissx@chrissx.de>')
    print('Usage:')
    print('%s c[capture]: capture data' % argv[0])
    print('%s p[plot] [cap]: prepare the data and open numbers for plotting' % argv[0])
